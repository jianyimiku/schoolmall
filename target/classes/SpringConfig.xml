<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/aop
https://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
https://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/context
https://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc
https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  读取properties  -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <context:component-scan base-package="com.cslg"/>

    <context:annotation-config/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${name}"/>
        <property name="password" value="${pass}"/>
        <property name="initialSize" value="5"/>
        <property name="maxActive" value="20"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="typeAliasesPackage" value="com.cslg.entity"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cslg.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManger" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
        <property name="rollbackOnCommitFailure" value="true"/>
    </bean>

    <!-- 基于注解的声明式事务   -->
    <tx:annotation-driven transaction-manager="transactionManger" proxy-target-class="true"/>


    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--   控制一个Pool可分配多少jedis实例     -->
        <property name="maxTotal" value="100"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!--     获取链接时候检查有效性   -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <!--    Redis连接池-->
    <bean id="jedisWritePool" class="com.cslg.cache.JedisPoolWriper"
          depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${redis.hostname}"/>
        <constructor-arg index="2" value="${redis.port}" type="int"/>
    </bean>

    <bean id="jedisUtil" class="com.cslg.cache.JedisUtil">
        <property name="jedisPool">
            <ref bean="jedisWritePool"/>
        </property>
    </bean>

    <!-- Redis的key操作 singleton 采用非懒加载模式-->
    <bean id="jedisKeys" class="com.cslg.cache.JedisUtil$Keys" scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <!-- Redis的Strings操作 -->
    <bean id="jedisStrings" class="com.cslg.cache.JedisUtil$Strings"
          scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <!-- Redis的Lists操作 -->
<!--    <bean id="jedisLists" class="com.imooc.o2o.cache.JedisUtil$Lists"-->
<!--          scope="singleton">-->
<!--        <constructor-arg ref="jedisUtil"></constructor-arg>-->
<!--    </bean>-->

</beans>